{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"19BPS1131_ML_LAB1","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOVod92X/qsYkGB3wBknI9P"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8naS9R084oY6","executionInfo":{"status":"ok","timestamp":1628596789157,"user_tz":-330,"elapsed":32,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"eb7aaf3c-0698-4b44-faf9-1cb6bc6865ac"},"source":["# 1.Write a NumPy program to reverse an array (first element becomes last).\n","import numpy as np\n","a= np.array([1,3,2,8,4,6,2,3,2,6,0,5])\n","print(\"original: \" ,a)\n","na= np.flipud(a)\n","print(\"reversed: \",na)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["original:  [1 3 2 8 4 6 2 3 2 6 0 5]\n","reversed:  [5 0 6 2 3 2 6 4 8 2 3 1]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6kpa3ODZ5f9o","executionInfo":{"status":"ok","timestamp":1628596791074,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"a996a916-2134-4156-90b5-a0a4976cf39d"},"source":["# 2. Write a NumPy program to convert the values of Centigrade degrees into Fahrenheit degrees. \n","cel = np.array([0, 12, 45.21, 34, 99.91])  \n","print(f\"Celsius {cel}\")\n","feh = (9 * cel / 5 + 32)\n","print(f\"Fahrenheit {feh}\")"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Celsius [ 0.   12.   45.21 34.   99.91]\n","Fahrenheit [ 32.     53.6   113.378  93.2   211.838]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SZBodzYm6VEj","executionInfo":{"status":"ok","timestamp":1628596814259,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"6c99a575-9d7b-4178-d779-fd860e81b3f3"},"source":["# 3. Write a NumPy program to find the real and imaginary parts of an array of complex numbers.\n","a = np.array([1+2j, 3+4j, 5+6j])\n","print(\"original: \",a)\n","print(\"real: \",a.real)\n","b= a.imag\n","\n","print(\"imaginary: \",b)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["original:  [1.+2.j 3.+4.j 5.+6.j]\n","real:  [1. 3. 5.]\n","imaginary:  [2. 4. 6.]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pdoxfFRV7EgM","executionInfo":{"status":"ok","timestamp":1628596811278,"user_tz":-330,"elapsed":655,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"e0d9f627-9551-4548-dfa4-95f17c785d64"},"source":["# 4. Write a NumPy program to find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements.\n","a= np.array([1,3,2,8,4,6,2,3,2,6,0,5])\n","print(\"number of elements in whole array\", a.size)\n","print(\"Bytes of one element\", a.itemsize)\n","print(\"total bytes comsumed \", a.size*a.itemsize)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["number of elements in whole array 12\n","Bytes of one element 8\n","total bytes comsumed  96\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TLjfOK5p8aJ8","executionInfo":{"status":"ok","timestamp":1628596834741,"user_tz":-330,"elapsed":550,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"d98d594d-90b9-476c-e27a-025a89eb121d"},"source":["# 5. Write a NumPy program to find common values between two arrays\n","ar1 = np.array([0, 1, 2, 3, 4,9])\n","ar2 = [1, 3, 9, 5,8]\n","\n","print(np.intersect1d(ar1, ar2))"],"execution_count":5,"outputs":[{"output_type":"stream","text":["[1 3 9]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N99vHh6I9w_q","executionInfo":{"status":"ok","timestamp":1628596858538,"user_tz":-330,"elapsed":705,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"6bab449d-6f07-4a59-e333-69c27e3f624a"},"source":["# 6. Write a NumPy program to create a structured array from given student name, height, class and their data types. Now sort by class, then height if class are equal.\n","data_type = [('name', 'S15'), ('class', int), ('height', float)]\n","students_details = [('Shivam', 5, 78.5), ('Ram', 6, 52.5),('Shaam', 5, 32.10), ('Rahul', 5, 60.11)]\n","students = np.array(students_details, dtype=data_type)   \n","print(\"Original array:\")\n","print(students)\n","print(\"Sort by height:\")\n","print(np.sort(students, order='height'))  "],"execution_count":6,"outputs":[{"output_type":"stream","text":["Original array:\n","[(b'Shivam', 5, 78.5 ) (b'Ram', 6, 52.5 ) (b'Shaam', 5, 32.1 )\n"," (b'Rahul', 5, 60.11)]\n","Sort by height:\n","[(b'Shaam', 5, 32.1 ) (b'Ram', 6, 52.5 ) (b'Rahul', 5, 60.11)\n"," (b'Shivam', 5, 78.5 )]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9k0mqXqK_SBY","executionInfo":{"status":"ok","timestamp":1628596877108,"user_tz":-330,"elapsed":535,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"99dfed42-015f-4afc-b95a-c70de48300d3"},"source":["# 7. Write a NumPy program to partition a given array in a specified position and move all the smaller elements values to the left of the partition, and the remaining values to the right, in arbitrary order (based on random choice).\n","nums = np.array([70, 50, 20,33,71, 30, -11, 60, 100, 40,3])\n","print(\"Original array:\")\n","print(nums)\n","print(\"\\nAfter partitioning on 6 the position:\")\n","print(np.partition(nums, 6))"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Original array:\n","[ 70  50  20  33  71  30 -11  60 100  40   3]\n","\n","After partitioning on 6 the position:\n","[-11   3  20  30  33  40  50  60  70 100  71]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dw1EqQcxAB0y","executionInfo":{"status":"ok","timestamp":1628596904047,"user_tz":-330,"elapsed":589,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"ff47e8ed-71f3-490c-967b-505bfde6921f"},"source":["# 8. Write a NumPy program to get the minimum and maximum value of a given array along the second axis. \n","nums = np.array([70, 50, 20,33,71, 30, -11, 60, 100, 40,3,99])\n","nums2 = nums.reshape((3, 4))\n","print(\"\\nOriginal array:\")\n","print(nums2)\n","print(\"\\nMaximum value along the second axis:\")\n","print(np.amax(nums2, 1))\n","print(\"Minimum value along the second axis:\")\n","print(np.amin(nums2, 1))\n"],"execution_count":8,"outputs":[{"output_type":"stream","text":["\n","Original array:\n","[[ 70  50  20  33]\n"," [ 71  30 -11  60]\n"," [100  40   3  99]]\n","\n","Maximum value along the second axis:\n","[ 70  71 100]\n","Minimum value along the second axis:\n","[ 20 -11   3]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cydvnL_lBcZj","executionInfo":{"status":"ok","timestamp":1628596928849,"user_tz":-330,"elapsed":642,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"cf95446f-1730-4098-c0cf-84b17affc05c"},"source":["# 9. Write a NumPy program to compute the covariance matrix of two given arrays.\n","array1 = np.array([2, 1, 1, 4])\n","array2 = np.array([2, 2, 1, 1])\n","print(\"original array1: \")\n","print(array1)\n","print(\"original array2: \")\n","print(array2)\n","print(\"Covariance matrix of the said arrays:\\n\",\n","\tnp.cov(array1, array2))\n"],"execution_count":9,"outputs":[{"output_type":"stream","text":["original array1: \n","[2 1 1 4]\n","original array2: \n","[2 2 1 1]\n","Covariance matrix of the said arrays:\n"," [[ 2.         -0.33333333]\n"," [-0.33333333  0.33333333]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tTsjRoamC5au","executionInfo":{"status":"ok","timestamp":1628596954961,"user_tz":-330,"elapsed":593,"user":{"displayName":"Shivam Batra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiTYME2zQfV_mAqjJDb0jqwfibjPs_1VS058IRBew=s64","userId":"01759435511870457071"}},"outputId":"46db7071-60f6-4ef8-9105-be96e79d4b55"},"source":["# 10. Write a NumPy program to compute the sum of the diagonal element of a given array.\n","nums = np.array([70, 50, 20,33,71, 30, -11, 60, 100, 40,3,99,7,2,1,9])\n","nums2 = nums.reshape((4, 4))\n","result =  np.trace(nums2)\n","print(\"original matrix: \\n\")\n","print(nums2)\n","print(\"sum of diogrnal elements\")\n","print(result)"],"execution_count":10,"outputs":[{"output_type":"stream","text":["original matrix: \n","\n","[[ 70  50  20  33]\n"," [ 71  30 -11  60]\n"," [100  40   3  99]\n"," [  7   2   1   9]]\n","sum of diogrnal elements\n","112\n"],"name":"stdout"}]}]}